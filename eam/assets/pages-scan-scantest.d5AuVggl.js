import { l as e, r as s, f as n, c as a, w as o, i as c, a as l, b as t, d as r, B as i, v as u, C as d, g as p, D as _, e as f } from "./index-wWlO_IEm.js"; import { s as v } from "./index.BQvkGUtl.js"; import { _ as g } from "./boxue.js"; const y = g({ __name: "scantest", setup(g) { const y = e({ scanInstance_3: null, scanInstance_4: null }); s(null); const b = s(null), I = s(null), m = () => { d({ onlyFromCamera: !0, success: function (e) { console.log("条码类型：" + e.scanType), console.log("条码内容：" + e.result) } }) }, x = () => { if (console.log("平台", p().platform), "h5" === p().platform) { let e = function (e, s) { console.log("条码类型：" + e), console.log("条码内容：" + s) }, s = null; s = plus.barcode.create("barcode", [plus.barcode.QR], { top: "100px", left: "0px", width: "100%", height: "500px", position: "static" }), s.onmarked = e, plus.webview.currentWebview().append(s), s.start() } else d({ onlyFromCamera: !0, success: function (e) { console.log("条码类型：" + e.scanType), console.log("条码内容：" + e.result) } }) }, h = () => { y.scanInstance_3 && (y.scanInstance_3.close(), y.scanInstance_3 = null) }, k = () => { console.log("扫码--plus.barcode.create"); try { y.scanInstance_3 && h(), y.scanInstance_3 = plus.barcode.create("barcode", [plus.barcode.QR], { top: "0px", left: "0px", width: "100%", height: "100%", position: "static" }, !0), y.scanInstance_3.onmarked = function (e, s) { console.log("Success: type=" + e + ", result=" + s), h(), _({ title: "扫码成功: " + s, icon: "none" }) }, plus.webview.currentWebview().append(y.scanInstance_3), y.scanInstance_3.start() } catch (e) { console.log("扫码--plus.barcode.create", e) } }, w = () => { b.value && (b.value.close(), b.value = null), I.value.style.display = "none" }, C = () => { const e = (e, s) => { _({ title: "扫码成功: " + e + "-" + s, icon: "none" }), v({ type: e, result: s }), (e => { console.log("111111", e) })(s), y.scanInstance_4.close(), I.value.style.display = "none" }, s = e => { console.log("error-扫描错误", e), y.scanInstance_4.close(), I.value.style.display = "none" }; try { I.value.style.display = "block"; var n = [plus.barcode.QR]; y.scanInstance_4 = new plus.barcode.Barcode("scanarea", n, { top: "0px", left: "0px", width: "100%", height: "100%", position: "static" }, !1), console.log("扫码控件初始化成功:", y.scanInstance_4), y.scanInstance_4.onmarked = e, y.scanInstance_4.onerror = s, y.scanInstance_4.start(), console.log("扫码已启动") } catch (a) { console.log("扫码初始化失败:", a) } }; return n((() => { destroyBarcode(), w() })), (e, s) => { const n = f, d = c; return l(), a(d, { class: "container" }, { default: o((() => [t(n, { onClick: m }, { default: o((() => [r("扫码1")])), _: 1 }), t(n, { onClick: x }, { default: o((() => [r("扫码2")])), _: 1 }), t(n, { onClick: s[0] || (s[0] = e => { u({ url: "/pages/video/video" }) }) }, { default: o((() => [r("跳转")])), _: 1 }), t(n, { onClick: k }, { default: o((() => [r("扫码3")])), _: 1 }), i("div", { class: "scanBox", style: { display: "none" }, ref_key: "scanBox", ref: I }, [i("div", { id: "scanarea", class: "qrarea" }), i("div", { class: "closeId scanBtn", onClick: w }, "关闭扫码"), i("div", { class: "lineDiv", style: { bottom: "80px" } }), i("div", { class: "selectqrcode scanBtn" }, "从相册选择二维码")], 512), t(n, { onClick: C }, { default: o((() => [r("扫码4")])), _: 1 })])), _: 1 }) } } }, [["__scopeId", "data-v-b6d1de13"]]); export { y as default };
